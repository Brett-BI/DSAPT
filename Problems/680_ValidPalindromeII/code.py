from typing import List


class Solution:
    def validPalindrome(self, s: str) -> bool:
        # the pointers
        l: int = 0
        r: int = len(s) - 1

        # standard 2-pointer loop
        while l <= r:
            # if the characters aren't he same, it's not a palindrome
            if s[l] != s[r]:
                # create new strings with updated indexes
                s1 = s[:l] + s[l+1:]
                s2 = s[:r] + s[r+1:]

                # return True if either of the strings, reversed, are the same
                return s1 == s1[::-1] or s2 == s2[::-1]
            
            l += 1
            r -= 1

        return True
    
s = Solution()
# true
print(s.validPalindrome("aba"))
# true
print(s.validPalindrome("abca"))
# false
print(s.validPalindrome("abc"))
# true
print(s.validPalindrome("lyjcyxwvartqrbmqpddmushqkalgywgsialtbfysqkmbobaujedobhsmauazbhdsilqkkjuzoqimfqwmfoqeiovstodqqsiyjbkbtshhjsalmbxqaacjmnijyfrwtvqfischpkcrwtozbiwrfvuggqdcinfhhyohizalbzjppztabikdnznbhyolevzutydrbxirjzltcpdglzjtyblflqjkolxymkvdfyqrfbhgwqsnzhuqxfcttlwjigbtennfvbxplzmxdheiaulyhzztwbhtsemruznnqzborldvdfpfjyraxuhceuklfxilxtljyytriyhezhjklykkkijjzquapufkrlsiovnkozlxkjnahpiulsrmykcqavrlriknuoxtdzpzddukfqmyvppndgjvcbuaskqsppsxbhchmtgxqklivlqbmscowxndgxcubnvymipsxohtrmtjyexbmslhhmqklrfvrdimcxykvgvkfocigjimkafxeevdetqjscgqewhaukixtxiivzsklpzcscxgzdlfqjmpkxegtbejckitubhugylihvoqximedxuujhsyzclyyrnvzptfrdhdmocxhgpwjxpxkbougrwwwhkfddyxnvawdirsrydkqstalyqpokivlcwxtmviakkwaqmwguasmmujfrxbhmckhgfwcsghuxcprqawxggdfpegfvolhenffubhsprjbpzkoxzksdyrajrtzmqwvcjvdzthzhwrmdqdmbnqxqibnfwpqbouophshrrbytfaroltdsfrmrnzrtlxskwfbxmieqyrlnpluohqafnfpfgrwjmmnzrgzdlzannsjxvoaxanzlldbrivsesecrdfttvaxsplisqjrsrklmfbtfejpftfxkdgvvdowlpwcafjzxsiwwgbtiphyrqbnjhyrioyaxucxndjwjhjjozdplbljuoizgxwzrydoptnwfminobnwhnearuhhommwxfnzvymbupowhsvvxsyxfldgwheacxksspkeiyrdlwrbktiwuydxqkfpdbsnggwuyfyigpbakxohotqbidrmjsldrpklozbifpcyxismcefvdwxunahkfujenaknczawlcvdfeazizsfzunozorctpdrzczwwdwcdmfhjsmfwjfqihwslydaghcccxvbntdrxkzyohrpgxcjxixdhpkjzsrqwsquauoqdtprdqrfajaqtzyzpussttzfaepgmgjvjvoopvntctdrddsaammvgcehmprmtzumifgjbzvpzprlepczdmwwdrrtvwhhnjatzswboekiajtspxcjgcgviewevutoxvrybxknptsnuysvwccdfmrxjuvptyamcckubbdptpzgaysbzsztjzwtcloqeyvosgmbpfgzbcdouiqfffwfuiawkzkodgckjwkvyuitmqixrjehzdksniqpsrigosupxkkluoiimdzyyhxvsffbkkhdaaxfoiatzsrtbnpgqnrfbosaymnpwmihoctrypveiuxcwtbodtggqxgyhhwtyknhruyhclssxlcmcabshajvtxurrrykkyalhdhbdwvjjhsejlqvnctixnzvukalkphvlwvmcqjeytpwbahfscydpjgcoxjcniptpobbuqirmhcjcesdhgwllnzyjrriduyyaogpqyxuhcvsvrxpvupmbczimxfggplguslywqjhyjyckwjbycbyhyaanuatlezcoiampqwtcgtrssnuhrzhlmuuczbernacccvtcjkzwhrptmzdxquqjvmxqzrvkluhrjekknzmqogbhzhzduvtndyqojylugcqnbjomsyiipsfhiflcnjzgfzkgsdbtqsuzdzjiykxfdjnzgdvcppiqlfmxurhldpcuhxbqytoizqdenexbtsztisrzsokuktzsqvooysvuqwijuxqyzguqnszumukgawzyogkxvkjsjttsjgnaftbgjqdwkjbrpqylyemnqcdllndevrcpmiwsuiipzjnipjbxfkdffmthhlkpqewukaxgworxcfwmlhothsgvhvwgfnpdvsxclprpnsnaiorttjfpiiufgagfbmiffgeikdarhubuaezjuqvgksbeiajjffbztzopyhvjoieduxqodqghkigskimdabcyhlqxxyaemhpriklpqmlbjocmklswahpwgwgzdludqvpiegwguznpclsucuqkvsawdbttfowetonjfjqnjvzdhfuqfpjmxynimnfxuygsztbortaxhxxwyzjwqszresyotfqdrcmwhrdsuelbxobqtnukazqikeijaispuhqpquexbwycxbzvbdbzczhdbrksibjikghthjjswuionrmarutnxqoserlkzioyssxpqhlqwztfvslsoaidgrahfvlvawegcajryevlqhapdfwyllaljqpzgqhjkozturndcksqieawyeazmmdxjcbfdobylfrudnxhlqvsmxyyiehauwvoqfpcuamknhbxgznwgnpggzkolpgfrcouxakuxyqbnzfwiiwdpqognpvksrfwajycyikjhharxlvummqjbduynuaghwvtdeqcbbexzmnyrzxorubfgcbzisaqnejyxxvaxrqxpfnyqyiqdwjaqobzthoxxvcjuwygbqjpaaverwmqmwcqkwrygapuiozsbkyeltsfbqylmbjeirpcmlwupdssmxvwadjxuwjoeeurakjeoqqosojuudzmclnskioxburoijftgbroznqplgddejuyrwcptkoyuqlecohsaftcgkorupqwvmadhemtgbqxwdcnoiobhtuffohsirgybmattgqkxdrtlssddwomxlxrpmsnhygfsyrjioxuurbkupzljrkgkytvzwpjvntqbzowctwjuhvsrzercfblafwcincdfucuwuynvwsxnxqdoqgskeujobuevkcsllfzcaypzfgrtzisouslkaohmoqzcmdzdrjcnasnazpaugxpmtaqewqxqwmqlqrmyyigqrlzczogzfaqnrgisnldfvhjvdpdlgjltsnfxopcluaqlplrdurnkffyfbyuaqwybeaebmhtlnordnvuuyjiukyknpxvamrqqqvlwzgouilfhhzekvgkqmsqhdqikddkwemlqfydfvkyicbmgnwxccmnbzphghoolhazupawvdwplphojedprkpmstcttuaqhxlxhyfziqwvnigwdmtuwutpfqbjmsqjzhomqltlrkavlvueusktbmmouqckzkejcyerrhjbodozzhdxtglaoptpchhdjnoyvtpdsumbrbppchssqbzbqqcsedqtqwhndxrgmyrhyfgzwkbgamfiqcmbcqqclrjvonrsobujtaoridmcrhowykivrhoywffjwpcohahixfwcqrgocsokorujsnveplxqksjytomxmxrlmtzbrjgmnmfzsziosxzhpkygfueazbfhypxqbssthyluexvwvprrickierqmatzimsvrppiibhiwfapptkwbcsjtzbsboabfvhyokdqsigfslwppaabuevsqqamshzzczhyipgiuitoluzgqwwcxnwquwumctqctkxvniathxwulblviimspakbsblgmfgnvxbnllpavkkckfjjlzolbizbigdbksujdsydphyuvzdlwpopwhfgajwmjubtufnbjakoftqftxrawpupkhmihoxqfgzxxdboyqgvolgecagnexhuuieizhlhxsrqefeikqcluzqzypsmkgkmzdrpsilgudqvbbjceltfdbamirhykijczepbrswgmdbxujcbfotwmnjmdhualecpyzusyeetlroakadpxppupmhsmsppniaauwqdjznznqkbakgtyckoazajjgypvzenxapjdgasfjfuqejedtdkvsrtgvmfkwxgwywpbnwffjqkjrrvufvkysgdukmpzqsbflnymgzxktqucxsvhzzrxnjydqblluvegrplvokhxpordaokurylggxvvbiiszjnuqjreecvgegqkohxyvmzypavllhbsstdemtlzmdqhlwkgcyqnuedntoztrwftvldtkuvwmhrklmxyrcynjgcrizpccvevkwjngmwkyorortkaaiajhomskokyawycbqquqbvpzppxbemjnttcqiblschxiulckqhufeibxrblzemrmjrfnbeqadwaytsobfvzflyasevaygvywvvrcidowqfscgynwuesswbbeecdclxwfdcopctdcbzftwmqkdsfkgjmwciiymzhlmfyaqopxbpikxltckgvitxnxbfitzuusqjnhlynlgptejpgnwebjcsmluwrkmsotihynyuhmyzytzcszmfxwgsbyocxvovhigjdpnbiuoqpzxanqzpbosxagibrgkgexeqawxnmmcjwawzgmavjffautdzpxgyxurupaqcweqsvzynqlnjoevagatcrmfeokzpiijvgebridzpmwcfhnwclmggxdsffifmkwiondafvnenolwnezwyrhllslogyjcbtpbecikylqivhbrkistbpdfrqhldylbuqfifcbihnacybphorcbyiivhvttswzzfyqygcdqhnptbeystejhuiyvisgjerevxdgkmksicqeyniilobpxivmfhzilqjyekihpuzrferwodnhoxymzfeyphzmzwjuvfqfetxwovkdmwutckxlsrylqmtsvriaiuhnshiuhcvzyxxatmhazrytobddzfxbicwxxspwnsbgpdanmiepznyvrinotebesqtgwtseanobufqlqbzqlwzqvkonlnscoqofdcslyauaszvlstlnhzfjqvagxzntzjymlyofoleqphtvukpniawecbfltyxdtywwgigxsacfcydgkxolhoswbmbjistxsgdlodufbevixjjxivebfudoldgsxtsijbmbwsohloxkgdycfcasxgigwwytdxytlfbcewainpkuvthpqelofoylmyjztnzxgavqjfzhnltslvzsauaylscdfoqocsnlnokvqzwlqzbqlqfubonaestwgtqsebetonirvynzpeimnadpgbsnwpsxxwcibxfzddbotyrzahmtaxxyzvchuihsnhuiairvstmqlyrslxkctuwmdkvowxtefqfvujwzmzhpyefzmyxohndowrefrzuphikeyjqlizhfmvixpboliinyeqciskmkgdxverejgsivyiuhjetsyebtpnhqdcgyqyfzzwsttvhviiybcrohpbycanhibcfifqublydlhqrfdpbtsikrbhviqlykicebptbcjygolsllhrywzenwlonenvfadnoiwkmfiffsdxggmlcwnhfcwmpzdirbegvjiipzkoefmrctagaveojnlqnyvsqewcqapuruxygxpzdtuaffjvamgzwawjcmmnxwaqexegkgrbigaxsobpzqnaxzpqouibnpdjgihvovxcoybsgwxfmzscztyzymhuynyhitosmkrwulmscjbewngpjetpglnylhnjqsuuztifbxnxtivgkctlxkipbxpoqayfmlhzmyiicwmjgkfsdkqmwtfzbcdtcpocdfwxlcdceebbwsseuwnygcsfqwodicrvvwyvgyavesaylfzvfbostyawdaqebnfrjmrmezlbrxbiefuhqkcluixhcslbiqcttnjmebxppzpvbquqqbcywaykoksmohjaiaaktroroykwmgnjwkvevccpzircgjnycryxmlkrhmwvuktdlvtfwrtzotndeunqycgkwlhqdmzltmedtssbhllvapyzmvyxhokqgegvceerjqunjzsiibvvxgglyrukoadropxhkovlprgevullbqdyjnxrzzhvsxcuqtkxzgmynlfbsqzpmkudgsykvfuvrrjkqjffwnbpwywgxwkfmvgtrsvkdtdejequfjfsagdjpaxnezkvpygjjazaokcytgkabkqnznzjdqwuaainppsmshmpuppxpdakaorlteeysuzypcelauhdmjnmwtofbcjuxbdmgwsrbpezcjikyhrimabdftlecjbbvqduglisprdzmkgkmspyzqzulcqkiefeqrsxhlhzieiuuhxengaceglovgqyobdxxzgfqxohimhkpupwarxtfqtfokajbnfutbujmwjagfhwpopwldzvuyhpdysdjuskbdgibziblozljjfkckkvapllnbxvngfmglbsbkapsmiivlbluwxhtainvxktcqtcmuwuqwnxcwwqgzulotiuigpiyhzczzhsmaqqsveubaappwlsfgisqdkoyhvfbaobsbztjscbwktppafwihbiipprvsmiztamqreikcirrpvwvxeulyhtssbqxpyhfbzaeufgykphzxsoizszfmnmgjrbztmlrxmxmotyjskqxlpevnsjurokoscogrqcwfxihahocpwjffwyohrvikywohrcmdiroatjubosrnovjrlcqqcbmcqifmagbkwzgfyhrymgrxdnhwqtqdescqqbzbqsshcppbrbmusdptvyonjdhhcptpoalgtxdhzzodobjhrreycjekzkcquommbtksueuvlvakrltlqmohzjqsmjbqfptuwutmdwginvwqizfyhxlxhqauttctsmpkrpdejohplpwdvwapuzahloohghpzbnmccxwngmbciykvfdyfqlmewkddkiqdhqsmqkgvkezhhfliuogzwlvqqqrmavxpnkykuijyuuvndronlthmbeaebywqauybfyffknrudrlplqaulcpoxfnstljgldpdvjhvfdlnsigrnqafzgozczlrqgiyymrqlqmwqxqweqatmpxguapzansancjrdzdmczqomhoaklsuosiztrgfzpyaczfllsckveubojueksgqodqxnxswvnyuwucufdcnicwfalbfcrezrsvhujwtcwozbqtnvjpwzvtykgkrjlzpukbruuxoijrysfgyhnsmprxlxmowddssltrdxkqgttambygrishoffuthboioncdwxqbgtmehdamvwqpurokgctfashocelquyoktpcwryujeddglpqnzorbgtfjiorubxoiksnlcmzduujosoqqoejkarueeojwuxjdawvxmssdpuwlmcpriejbmlyqbfstleykbszoiupagyrwkqcwmqmwrevaapjqbgywujcvxxohtzboqajwdqiyqynfpxqrxavxxyjenqasizbcgfburoxzrynmzxebbcqedtvwhgaunyudbjqmmuvlxrahhjkiycyjawfrskvpngoqpdwiiwfznbqyxukaxuocrfgplokzggpngwnzgxbhnkmaucpfqovwuaheiyyxmsvqlhxndurflybodfbcjxdmmzaeywaeiqskcdnrutzokjhqgzpqjlallywfdpahqlveyrjacgewavlvfhargdiaoslsvftzwqlhqpxssyoizklresoqxnturamrnoiuwsjjhthgkijbiskrbdhzczbdbvzbxcywbxeuqpqhupsiajiekiqzakuntqboxbleusdrhwmcrdqftoyserzsqwjzywxxhxatrobtzsgyuxfnminyxmjpfqufhdzvjnqjfjnotewofttbdwasvkqucuslcpnzugwgeipvqduldzgwgwphawslkmcojblmqplkirphmeayxxqlhycbadmiksgikhgqdoqxudeiojvhypoztzbffjjaiebskgvqujzeaubuhradkiegffimbfgagfuiipfjttroiansnprplcxsvdpnfgwvhvgshtohlmwfcxrowgxakuweqpklhhtmffdkfxbjpinjzpiiuswimpcrvednlldcqnmeylyqprbjkwdqjgbtfangjsttjsjkvxkgoyzwagkumuzsnqugzyqxujiwquvsyoovqsztkukoszrsitzstbxenedqziotyqbxhucpdlhruxmflqippcvdgznjdfxkyijzdzusqtbdsgkzfgzjnclfihfspiiysmojbnqcgulyjoqydntvudzhzhbgoqmznkkejrhulkvrzqxmvjquqxdzmtprhwzkjctvcccanrebzcuumlhzrhunssrtgctwqpmaioczeltaunaayhybcybjwkcyjyhjqwylsuglpggfxmizcbmpuvpxrvsvchuxyqpgoayyudirrjyznllwghdsecjchmriqubboptpincjxocgjpdycsfhabwptyejqcmvwlvhpklakuvznxitcnvqljeshjjvwdbhdhlaykkyrrruxtvjahsbacmclxsslchyurhnkytwhhygxqggtdobtwcxuievpyrtcohimwpnmyasobfrnqgpnbtrsztaiofxaadhkkbffsvxhyyzdmiioulkkxpusogirspqinskdzhejrxiqmtiuyvkwjkcgdokzkwaiufwfffqiuodcbzgfpbmgsovyeqolctwzjtzszbsyagzptpdbbukccmaytpvujxrmfdccwvsyunstpnkxbyrvxotuveweivgcgjcxpstjaikeobwsztajnhhwvtrrdwwmdzcpelrpzpvzbjgfimuztmrpmhecgvmmaasddrdtctnvpoovjvjgmgpeafzttssupzyztqajafrqdrptdqouauqswqrszjkphdxixjcxgprhoyzkxrdtnbvxccchgadylswhiqfjwfmsjhfmdcwdwwzczrdptcrozonuzfszizaefdvclwazcnkanejufkhanuxwdvfecmsixycpfibzolkprdlsjmrdibqtohoxkabpgiyfyuwggnsbdpfkqxdyuwitkbrwldryiekpsskxcaehwgdlfxysxvvshwopubmyvznfxwmmohhuraenhwnbonimfwntpodyrzwxgzioujlblpdzojjhjwjdnxcuxayoiryhjnbqryhpitbgwwisxzjfacwplwodvvgdkxftfpjeftbfmlkrsrjqsilpsxavttfdrcesesvirbdllznaxaovxjsnnazldzgrznmmjwrgfpfnfaqhoulpnlryqeimxbfwksxltrznrmrfsdtloraftybrrhshpouobqpwfnbiqxqnbmdqdmrwhzhtzdvjcvwqmztrjarydskzxokzpbjrpshbuffnehlovfgepfdggxwaqrpcxuhgscwfghkcmhbxrfjummsaugwmqawkkaivmtxwclvikopqylatsqkdyrsridwavnxyddfkhwwwrguobkxpxjwpghxcomdhdrftpzvnryylczyshjuuxdemixqovhilyguhbutikcjebtgexkpmjqfldzgxcsczplkszviixtxikuahweqgcsjqtedveexfakmijgicofkvgvkyxcmidrvfrlkqmhhlsmbxeyjtmrthoxspimyvnbucxgdnxwocsmbqlvilkqxgtmhchbxsppsqksaubcvjgdnppvymqfkuddzpzdtxounkirlrvaqckymrsluiphanjkxlzoknvoislrkfupauqzjjikkkylkjhzehyirtyyjltxlixflkuechuxaryjfpfdvdlrobzqnnzurmesthbwtzzhyluaiehdxmzlpxbvfnnetbgijwlttcfxquhznsqwghbfrqyfdvkmyxlokjqlflbytjzlgdpctlzjrixbrdytuzveloyhbnzndkibatzppjzblazihoyhhfnicdqgguvfrwibzotwrckphcsifqvtwrfyjinmjcaaqxbmlasjhhstbkbjyisqqdotsvoieqofmwqfmiqozujkkqlisdhbzauamshbodejuabobmkqsyfbtlaisgwyglakqhsumddpqmbrqtravwxycjyl"))
# false
print(s.validPalindrome("eeccccbebaeeabebccceea"))
# false
print(s.validPalindrome("aabdeenddbaagbddeedbaa"))
# true
print(s.validPalindrome("aguokepatgbnvfqmgmlcupuufxoohdfpgjdmysgvhmvffcnqxjjxqncffvmhvgsymdjgpfdhooxfuupuculmgmqfvnbgtapekouga"))